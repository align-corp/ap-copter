# hw definition file for processing by chibios_hwdef.py
# for AP6 hardware

# define AP6 frames
define ALIGN_M460_DEV   0x02010000
define ALIGN_M460       0x02010001
define ALIGN_M460_G3P   0x02010101
define ALIGN_M490_DEV   0x02020000
define ALIGN_M490       0x02020001
define ALIGN_M490_G3P   0x02020101
define ALIGN_M6T22_DEV  0x02030000
define ALIGN_M6T22      0x02030001
define ALIGN_M4T12_DEV  0x02040000
define ALIGN_M4T12      0x02040001
define ALIGN_M4T12_RTK  0x02040002


# USB setup (future use)
USB_VENDOR 0x2A58 # ALIGN Corporation Limited
USB_PRODUCT 0xA002 # AP6
USB_STRING_MANUFACTURER "ALIGN"

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# crystal frequency
OSCILLATOR_HZ 24000000

# board ID for firmware load
APJ_BOARD_ID 151 # AP_HW_ALIGN_AP6

FLASH_SIZE_KB 2048

# ChibiOS system timer
STM32_ST_USE_TIMER 2

# bootloader takes first sector, param second and third sectors
FLASH_RESERVE_START_KB 384

# use 2 pages for flash storage
# H743 has 16 pages of 128k each
STORAGE_FLASH_PAGE 1
define HAL_STORAGE_SIZE 32768

# order of UARTs (and USB)
# Serial1   UART1
# Serial2   UART2
# Serial3   UART3
# Serial4   UART4
# Serial5   UART5
# Serial6   GPS1
# Serial7   GPS2
# Serial8   RCIN

SERIAL_ORDER OTG1 UART8 UART7 USART3 USART2 UART5 USART6 UART4 USART1

# USB
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1
PA9 VBUS INPUT OPENDRAIN

# these are the pins for SWD debugging with a STlinkv2 or black-magic probe
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# SPI1 - internal sensors (IMU)
PB3 SPI1_SCK SPI1
PB4 SPI1_MISO SPI1
PB5 SPI1_MOSI SPI1

# SPI6 - BARO MS5611 x2
PA5 SPI6_SCK SPI6
PA6 SPI6_MISO SPI6
PA7 SPI6_MOSI SPI6

# SPI4 - Flash Storage
PE2 SPI4_SCK SPI4
PE5 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4

# sensor CS and INT
PA15 MPU6500_CS CS
PC13 ICM20948_CS CS
PD3 ICM42688_CS CS
PA4 MS5611_CS CS
PC4 MS5611_2_CS CS
PE4 FLASH_CS CS
PD10 MPU6500_INT INPUT
PE3 ICM20948_INT INPUT
PD7 ICM42688_INT1 INPUT
PD4 ICM42688_INT2 INPUT

# define the order that I2C buses 
I2C_ORDER I2C1 I2C2

# I2C2 is on GPS2 port and I2C connector
PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2

# I2C1 is on GPS1 port
PB6 I2C1_SCL I2C1
PB9 I2C1_SDA I2C1

# All I2C are external
define HAL_I2C_INTERNAL_MASK 0

# define UARTs

# Serial1
PE1 UART8_TX UART8 NODMA
PE0 UART8_RX UART8 NODMA
define HAL_SERIAL1_PROTOCOL SerialProtocol_MAVLink2

# Serial2
PE8 UART7_TX UART7 NODMA
PE7 UART7_RX UART7 NODMA
define HAL_SERIAL2_PROTOCOL SerialProtocol_MAVLink2

# Serial3
PD8 USART3_TX USART3 NODMA
PD9 USART3_RX USART3 NODMA
define HAL_SERIAL3_PROTOCOL SerialProtocol_MAVLink2

# Serial4
PD5 USART2_TX USART2 NODMA
PD6 USART2_RX USART2 NODMA
define HAL_SERIAL4_PROTOCOL SerialProtocol_MAVLink2

# Serial5
PC12 UART5_TX UART5 NODMA
PD2 UART5_RX UART5 NODMA
define HAL_SERIAL5_PROTOCOL SerialProtocol_MAVLink2
define HAL_SERIAL5_BAUD 115

# Serial6 GPS1
PC7 USART6_RX USART6
PC6 USART6_TX USART6
define HAL_SERIAL6_PROTOCOL SerialProtocol_GPS
define HAL_SERIAL6_BAUD 115

# Serial7 GPS2
PC10 UART4_TX UART4
PB8 UART4_RX UART4
define HAL_SERIAL7_PROTOCOL SerialProtocol_GPS
define HAL_SERIAL7_BAUD 115

# Serial 8 as RCIN
PA10 USART1_RX USART1
define HAL_SERIAL8_PROTOCOL SerialProtocol_RCIN
define HAL_SERIAL8_BAUD 115


# PWM AUX channels
PE11 TIM1_CH2 TIM1 PWM(1) GPIO(50)
PE13 TIM1_CH3 TIM1 PWM(2) GPIO(51)
PE14 TIM1_CH4 TIM1 PWM(3) GPIO(52)
PD15 TIM4_CH4 TIM4 PWM(4) GPIO(53) 
PB1 TIM3_CH4 TIM3 PWM(5) GPIO(54) 
PB0 TIM3_CH3 TIM3 PWM(6) GPIO(55)
PE9 TIM1_CH1 TIM1 PWM(7) GPIO(56)
PD12 TIM4_CH1 TIM4 PWM(8) GPIO(57)
PD13 TIM4_CH2 TIM4 PWM(9)  GPIO(58)
PD14 TIM4_CH3 TIM4 PWM(10) GPIO(59)
PA3 TIM5_CH4 TIM5 PWM(11) GPIO(60) #RPM
PA2 TIM5_CH3 TIM5 PWM(12) GPIO(61) # NeoPixel LED strip

# ADC
PC0 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PC1 BATT_CURRENT_SENS ADC1 SCALE(1)

define HAL_BATT_MONITOR_DEFAULT 4
define HAL_BATT_VOLT_PIN 11
define HAL_BATT_CURR_PIN 10
define HAL_BATT_VOLT_SCALE 50.9
define HAL_BATT_CURR_SCALE 3.0

# CAN bus
PD0  CAN1_RX CAN1
PD1  CAN1_TX CAN1

# 2nd CAN bus
PB12 CAN2_RX CAN2
PB13 CAN2_TX CAN2

# SPI devices
SPIDEV icm42688       SPI1 DEVID1  ICM42688_CS  MODE3   2*MHZ   8*MHZ
SPIDEV ms5611_2       SPI6 DEVID1  MS5611_2_CS  MODE3  20*MHZ  20*MHZ
SPIDEV ms5611         SPI6 DEVID2  MS5611_CS    MODE3  20*MHZ  20*MHZ
SPIDEV dataflash      SPI4 DEVID1  FLASH_CS     MODE3 104*MHZ 104*MHZ
SPIDEV icm20948       SPI1 DEVID2  ICM20948_CS  MODE3   4*MHZ   8*MHZ
SPIDEV mpu6500        SPI1 DEVID3  MPU6500_CS   MODE3   2*MHZ   8*MHZ

# three IMUs
IMU Invensensev3 SPI:icm42688 ROTATION_ROLL_180_YAW_90
IMU Invensensev2 SPI:icm20948 ROTATION_NONE
IMU Invensense SPI:mpu6500 ROTATION_NONE

# enable fast sampling IMUs (all except mpu6500)
define HAL_DEFAULT_INS_FAST_SAMPLE 3

# Enable all IMUs to be used and therefore three active EKF Lanes
define HAL_EKF_IMU_MASK_DEFAULT 7

# compass as part of ICM20948
COMPASS AK09916:probe_ICM20948 0 ROTATION_YAW_90

# also probe for external compasses
define HAL_PROBE_EXTERNAL_I2C_COMPASSES

# two Baro sensors
BARO MS56XX SPI:ms5611
BARO MS56XX SPI:ms5611_2

# Heater
PE15 HEATER_EN OUTPUT LOW GPIO(80)
define HAL_HEATER_GPIO_PIN 80
# heater is on when pulled high
define HAL_HEATER_GPIO_ON 1
define HAL_HAVE_IMU_HEATER 1
define HAL_IMU_TEMP_DEFAULT 45
define HAL_IMUHEAT_P_DEFAULT 50
define HAL_IMUHEAT_I_DEFAULT 0.07
define HAL_IMU_TEMP_MARGIN_LOW_DEFAULT 5

# enable logging to dataflash
define HAL_LOGGING_DATAFLASH_ENABLED 1
define HAL_LOGGING_DATAFLASH_DRIVER AP_Logger_W25N01GV

# fake stuff to enable scripting
# fake sd card 
PB14 SDCARD_CS CS
SPIDEV sdcard SPI4 DEVID2 SDCARD_CS MODE0 400*KHZ 25*MHZ
# enable filesystem
define HAL_OS_FATFS_IO 1
define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

DMA_NOSHARE  SPI1* SPI4*